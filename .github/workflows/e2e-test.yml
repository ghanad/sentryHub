name: E2E Tests (Slack & SMS)

on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "master"]

jobs:
  # --- Job for Slack E2E Test ---
  slack-e2e-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6
        ports: [- 6379:6379]
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management
        ports: [- 5672:5672]
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Start Mock Server
        run: python tests/e2e/mock_server.py &
      - name: Start Celery Worker
        env:
          DJANGO_SETTINGS_MODULE: sentryHub.settings
          RABBITMQ_HOST: localhost
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
        run: celery -A sentryHub.celery worker --loglevel=info &
      - name: Wait for services
        run: sleep 15
      - name: Run Slack E2E Test Script
        env:
          DJANGO_SETTINGS_MODULE: sentryHub.settings
          RABBITMQ_HOST: localhost
        # Assume your existing Slack test script is named this. Adjust if necessary.
        run: python tests/e2e/run_slack_e2e_test.py

  # --- Job for SMS E2E Test ---
  sms-e2e-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6
        ports: [- 6379:6379]
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management
        ports: [- 5672:5672]
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Start Mock Server
        run: python tests/e2e/mock_server.py &
      - name: Start Celery Worker
        env:
          DJANGO_SETTINGS_MODULE: sentryHub.settings
          RABBITMQ_HOST: localhost
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
        run: celery -A sentryHub.celery worker --loglevel=info &
      - name: Wait for services
        run: sleep 15
      - name: Run SMS E2E Test Script
        env:
          DJANGO_SETTINGS_MODULE: sentryHub.settings
          RABBITMQ_HOST: localhost
        run: python tests/e2e/run_sms_e2e_test.py